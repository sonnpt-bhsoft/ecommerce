[{"G:\\Study\\Code\\React\\e-commerce\\src\\App.js":"1","G:\\Study\\Code\\React\\e-commerce\\src\\index.js":"2","G:\\Study\\Code\\React\\e-commerce\\src\\components\\Products\\Products.jsx":"3","G:\\Study\\Code\\React\\e-commerce\\src\\components\\Products\\Product\\Product.jsx":"4","G:\\Study\\Code\\React\\e-commerce\\src\\components\\Products\\Product\\style.js":"5","G:\\Study\\Code\\React\\e-commerce\\src\\components\\index.js":"6","G:\\Study\\Code\\React\\e-commerce\\src\\components\\Navbar\\style.js":"7","G:\\Study\\Code\\React\\e-commerce\\src\\components\\Navbar\\Navbar.jsx":"8","G:\\Study\\Code\\React\\e-commerce\\src\\lib\\commerce.js":"9","G:\\Study\\Code\\React\\e-commerce\\src\\components\\Products\\style.js":"10","G:\\Study\\Code\\React\\e-commerce\\src\\components\\Cart\\Cart.jsx":"11","G:\\Study\\Code\\React\\e-commerce\\src\\components\\Cart\\style.js":"12","G:\\Study\\Code\\React\\e-commerce\\src\\components\\Cart\\CartItem\\CartItem.jsx":"13","G:\\Study\\Code\\React\\e-commerce\\src\\components\\Cart\\CartItem\\style.js":"14","G:\\Study\\Code\\React\\e-commerce\\src\\components\\CheckoutForm\\Checkout\\Checkout.jsx":"15","G:\\Study\\Code\\React\\e-commerce\\src\\components\\CheckoutForm\\Checkout\\style.js":"16","G:\\Study\\Code\\React\\e-commerce\\src\\components\\CheckoutForm\\PaymentForm.jsx":"17","G:\\Study\\Code\\React\\e-commerce\\src\\components\\CheckoutForm\\CustomTextField.jsx":"18","G:\\Study\\Code\\React\\e-commerce\\src\\components\\CheckoutForm\\AddressForm.jsx":"19","G:\\Study\\Code\\React\\e-commerce\\src\\components\\CheckoutForm\\Review.jsx":"20"},{"size":2538,"mtime":1608017520813,"results":"21","hashOfConfig":"22"},{"size":381,"mtime":1607917337286,"results":"23","hashOfConfig":"22"},{"size":654,"mtime":1607916849912,"results":"24","hashOfConfig":"22"},{"size":1328,"mtime":1607917213616,"results":"25","hashOfConfig":"22"},{"size":356,"mtime":1607912551886,"results":"26","hashOfConfig":"22"},{"size":231,"mtime":1607934925560,"results":"27","hashOfConfig":"22"},{"size":1706,"mtime":1607887957694,"results":"28","hashOfConfig":"22"},{"size":1543,"mtime":1607924295782,"results":"29","hashOfConfig":"22"},{"size":125,"mtime":1607889421506,"results":"30","hashOfConfig":"22"},{"size":300,"mtime":1607888898625,"results":"31","hashOfConfig":"22"},{"size":2178,"mtime":1607934798509,"results":"32","hashOfConfig":"22"},{"size":599,"mtime":1607924304389,"results":"33","hashOfConfig":"22"},{"size":1524,"mtime":1607926116012,"results":"34","hashOfConfig":"22"},{"size":351,"mtime":1607921826884,"results":"35","hashOfConfig":"22"},{"size":3899,"mtime":1608021578608,"results":"36","hashOfConfig":"22"},{"size":1210,"mtime":1607935712904,"results":"37","hashOfConfig":"22"},{"size":2951,"mtime":1608021372523,"results":"38","hashOfConfig":"22"},{"size":580,"mtime":1608018003286,"results":"39","hashOfConfig":"22"},{"size":5444,"mtime":1608021093023,"results":"40","hashOfConfig":"22"},{"size":1059,"mtime":1608012617229,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"12wth80",{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"G:\\Study\\Code\\React\\e-commerce\\src\\App.js",[],"G:\\Study\\Code\\React\\e-commerce\\src\\index.js",[],["91","92"],"G:\\Study\\Code\\React\\e-commerce\\src\\components\\Products\\Products.jsx",[],["93","94"],"G:\\Study\\Code\\React\\e-commerce\\src\\components\\Products\\Product\\Product.jsx",[],"G:\\Study\\Code\\React\\e-commerce\\src\\components\\Products\\Product\\style.js",[],["95","96"],"G:\\Study\\Code\\React\\e-commerce\\src\\components\\index.js",[],"G:\\Study\\Code\\React\\e-commerce\\src\\components\\Navbar\\style.js",[],["97","98"],"G:\\Study\\Code\\React\\e-commerce\\src\\components\\Navbar\\Navbar.jsx",["99","100"],"G:\\Study\\Code\\React\\e-commerce\\src\\lib\\commerce.js",[],["101","102"],"G:\\Study\\Code\\React\\e-commerce\\src\\components\\Products\\style.js",[],["103","104"],"G:\\Study\\Code\\React\\e-commerce\\src\\components\\Cart\\Cart.jsx",[],"G:\\Study\\Code\\React\\e-commerce\\src\\components\\Cart\\style.js",[],"G:\\Study\\Code\\React\\e-commerce\\src\\components\\Cart\\CartItem\\CartItem.jsx",[],["105","106"],"G:\\Study\\Code\\React\\e-commerce\\src\\components\\Cart\\CartItem\\style.js",[],"G:\\Study\\Code\\React\\e-commerce\\src\\components\\CheckoutForm\\Checkout\\Checkout.jsx",["107"],"import {\r\n  Button,\r\n  CircularProgress,\r\n  Divider,\r\n  Paper,\r\n  Step,\r\n  StepLabel,\r\n  Stepper,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { commerce } from \"../../../lib/commerce\";\r\nimport AddressForm from \"../AddressForm\";\r\nimport PaymentForm from \"../PaymentForm\";\r\nimport useStyles from \"./style\";\r\n\r\nconst steps = [\"Shipping address\", \"Payment details\"];\r\n\r\nconst Checkout = ({ cart, order, onCaptureCheckout, error }) => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  const [activeStep, setActiveStep] = useState(0);\r\n  const [shippingData, setShippingData] = useState({});\r\n  const [checkoutToken, setCheckoutToken] = useState(null);\r\n  const [isFinished, setIsFinished] = useState()\r\n\r\n  useEffect(() => {\r\n    const generateToken = async () => {\r\n      try {\r\n        const token = await commerce.checkout.generateToken(cart.id, {\r\n          type: \"cart\",\r\n        });\r\n        console.log(\"token\", token);\r\n        setCheckoutToken(token);\r\n      } catch (error) {\r\n        history.pushState(\"/\");\r\n      }\r\n    };\r\n    generateToken();\r\n  }, [cart]);\r\n\r\n  const nextStep = () => setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  const backStep = () => setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n\r\n  const next = (data) => {\r\n    setShippingData(data);\r\n    nextStep();\r\n  };\r\n\r\n  const timeout = () => {\r\n    setTimeout(() => {\r\n      setIsFinished(true)\r\n    }, 3000);\r\n  };\r\n\r\n  let Confirmation = () =>\r\n    order.customer ? (\r\n      <>\r\n        <div>\r\n          <Typography variant=\"h5\">\r\n            Thank you for your purchase, {order.customer.firstname}\r\n            {order.customer.lastname}!\r\n          </Typography>\r\n          <Divider className={classes.divider} />\r\n          <Typography variant=\"subtitle2\">\r\n            Order ref: {order.customer_reference}\r\n          </Typography>\r\n        </div>\r\n        <br />\r\n        <Button component={Link} variant=\"outlined\" type=\"button\" to=\"/\">\r\n          Back to home\r\n        </Button>\r\n      </>\r\n    ) : isFinished ? (\r\n      <>\r\n      <div>\r\n        <Typography variant=\"h5\">\r\n          Thank you for your purchase!\r\n        </Typography>\r\n      </div>\r\n      <br />\r\n      <Button component={Link} variant=\"outlined\" type=\"button\" to=\"/\">\r\n        Back to home\r\n      </Button>\r\n    </>\r\n    ) : (\r\n      <div className={classes.spinner}>\r\n        <CircularProgress />\r\n      </div>\r\n    );\r\n  if (error) {\r\n    Confirmation = () => (\r\n      <>\r\n        <Typography variant=\"h5\">Error: {error}</Typography>\r\n        <br />\r\n        <Button component={Link} variant=\"outlined\" type=\"button\" to=\"/\">\r\n          Back to home\r\n        </Button>\r\n      </>\r\n    );\r\n  }\r\n\r\n  const Form = () =>\r\n    activeStep === 0 ? (\r\n      <AddressForm checkoutToken={checkoutToken} next={next} />\r\n    ) : (\r\n      <PaymentForm\r\n        shippingData={shippingData}\r\n        checkoutToken={checkoutToken}\r\n        nextStep={nextStep}\r\n        backStep={backStep}\r\n        onCaptureCheckout={onCaptureCheckout}\r\n        timeout={timeout}\r\n      />\r\n    );\r\n  return (\r\n    <>\r\n      <div className={classes.toolbar} />\r\n      <main className={classes.layout}>\r\n        <Paper className={classes.paper}>\r\n          <Typography variant=\"h4\" align=\"center\">\r\n            Checkout\r\n          </Typography>\r\n          <Stepper activeStep={activeStep} className={classes.stepper}>\r\n            {steps.map((step) => (\r\n              <Step key={step}>\r\n                <StepLabel>{step}</StepLabel>\r\n              </Step>\r\n            ))}\r\n          </Stepper>\r\n          {activeStep === steps.length ? (\r\n            <Confirmation />\r\n          ) : (\r\n            checkoutToken && <Form />\r\n          )}\r\n        </Paper>\r\n      </main>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Checkout;\r\n","G:\\Study\\Code\\React\\e-commerce\\src\\components\\CheckoutForm\\Checkout\\style.js",[],"G:\\Study\\Code\\React\\e-commerce\\src\\components\\CheckoutForm\\PaymentForm.jsx",[],"G:\\Study\\Code\\React\\e-commerce\\src\\components\\CheckoutForm\\CustomTextField.jsx",[],"G:\\Study\\Code\\React\\e-commerce\\src\\components\\CheckoutForm\\AddressForm.jsx",["108","109","110","111","112"],"import {\r\n  Button,\r\n  Grid, InputLabel,\r\n\r\n  MenuItem, Select,\r\n\r\n\r\n\r\n  Typography\r\n} from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { FormProvider, useForm } from \"react-hook-form\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { commerce } from \"../../lib/commerce\";\r\nimport FormInput from \"./CustomTextField\";\r\n\r\n\r\nconst AddressForm = ({ checkoutToken, next }) => {\r\n  const [shippingCountries, setShippingCountries] = useState([]);\r\n  const [shippingCountry, setShippingCountry] = useState(\"\");\r\n  const [shippingSubdivisions, setShippingSubdivisions] = useState([]);\r\n  const [shippingSubdivision, setShippingSubdivision] = useState(\"\");\r\n  const [shippingOptions, setShippingOptions] = useState([]);\r\n  const [shippingOption, setShippingOption] = useState(\"\");\r\n\r\n  const methods = useForm();\r\n\r\n  const countries = Object.entries(shippingCountries).map(([code, name]) => ({\r\n    id: code,\r\n    label: name,\r\n  }));\r\n  const subdivisions = Object.entries(shippingSubdivisions).map(\r\n    ([code, name]) => ({\r\n      id: code,\r\n      label: name,\r\n    })\r\n  );\r\n  const options = shippingOptions.map((shippingOption) => ({\r\n    id: shippingOption.id,\r\n    label: `${shippingOption.label} - (${shippingOption.price.formatted_with_symbol})`,\r\n  }));\r\n\r\n  console.log(\"countries\", countries);\r\n\r\n  const fetchShippingCountries = async (checkoutTokenId) => {\r\n    const { countries } = await commerce.services.localeListShippingCountries(\r\n      checkoutTokenId\r\n    );\r\n    console.log(\"countries\", countries);\r\n\r\n    setShippingCountries(countries);\r\n    setShippingCountry(Object.keys(countries)[0]);\r\n  };\r\n\r\n  const fetchSubdivisions = async (countryCode) => {\r\n    const { subdivisions } = await commerce.services.localeListSubdivisions(\r\n      countryCode\r\n    );\r\n\r\n    setShippingSubdivisions(subdivisions);\r\n    setShippingSubdivision(Object.keys(subdivisions)[0]);\r\n  };\r\n\r\n  const fetchShippingOptions = async (\r\n    checkoutTokenId,\r\n    country,\r\n    region = null\r\n  ) => {\r\n    const options = await commerce.checkout.getShippingOptions(\r\n      checkoutTokenId,\r\n      { country, region }\r\n    );\r\n\r\n    setShippingOptions(options);\r\n    setShippingOption(options[0].id);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n    fetchShippingCountries(checkoutToken.id);\r\n    return () => { isMounted = false };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n    if (shippingCountry) fetchSubdivisions(shippingCountry);\r\n    return () => { isMounted = false };\r\n  }, [shippingCountry]);\r\n\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n    if (shippingSubdivision)\r\n    fetchShippingOptions(\r\n      checkoutToken.id,\r\n      shippingCountry,\r\n      shippingSubdivision\r\n      );\r\n      return () => { isMounted = false };\r\n    }, [shippingSubdivision]);\r\n\r\n  return (\r\n    <>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        Shipping Address\r\n      </Typography>\r\n      <FormProvider {...methods}>\r\n        <form onSubmit={methods.handleSubmit((data) => next({ ...data, shippingCountry, shippingSubdivision, shippingOption }))} >\r\n        <Grid container spacing={3}>\r\n          <FormInput name=\"firstName\" label=\"First name\" />\r\n          <FormInput name=\"lastName\" label=\"Last name\" />\r\n          <FormInput name=\"address1\" label=\"Address\" />\r\n          <FormInput name=\"email\" label=\"Email\" />\r\n          <FormInput name=\"city\" label=\"City\" />\r\n          <FormInput name=\"zip\" label=\"ZIP / Postal code \" />\r\n          <Grid item xs={12} sm={6}>\r\n            <InputLabel>Shipping Country</InputLabel>\r\n            <Select\r\n              value={shippingCountry}\r\n              fullWidth\r\n              onChange={(e) => setShippingCountry(e.target.value)}\r\n            >\r\n              {countries.map((country) => (\r\n                <MenuItem key={country.id} value={country.id}>\r\n                  {country.label}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            <InputLabel>Shipping Subdivision</InputLabel>\r\n            <Select\r\n              value={shippingSubdivision}\r\n              fullWidth\r\n              onChange={(e) => setShippingSubdivision(e.target.value)}\r\n            >\r\n              {subdivisions.map((subdivision) => (\r\n                <MenuItem key={subdivision.id} value={subdivision.id}>\r\n                  {subdivision.label}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            <InputLabel>Shipping Options</InputLabel>\r\n            <Select\r\n              value={shippingOption}\r\n              fullWidth\r\n              onChange={(e) => setShippingOption(e.target.value)}\r\n            >\r\n              {options.map((option) => (\r\n                <MenuItem key={option.id} value={option.id}>\r\n                  {option.label}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </Grid>\r\n        </Grid>\r\n        <br />\r\n        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n          <Button component={Link} to=\"/cart\" variant=\"outlined\">\r\n            Back to Cart\r\n          </Button>\r\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n            Next\r\n          </Button>\r\n        </div>\r\n        </form>\r\n      </FormProvider>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddressForm;\r\n","G:\\Study\\Code\\React\\e-commerce\\src\\components\\CheckoutForm\\Review.jsx",[],{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"113","replacedBy":"117"},{"ruleId":"115","replacedBy":"118"},{"ruleId":"113","replacedBy":"119"},{"ruleId":"115","replacedBy":"120"},{"ruleId":"113","replacedBy":"121"},{"ruleId":"115","replacedBy":"122"},{"ruleId":"123","severity":1,"message":"124","line":7,"column":3,"nodeType":"125","messageId":"126","endLine":7,"endColumn":11},{"ruleId":"123","severity":1,"message":"127","line":8,"column":3,"nodeType":"125","messageId":"126","endLine":8,"endColumn":7},{"ruleId":"113","replacedBy":"128"},{"ruleId":"115","replacedBy":"129"},{"ruleId":"113","replacedBy":"130"},{"ruleId":"115","replacedBy":"131"},{"ruleId":"113","replacedBy":"132"},{"ruleId":"115","replacedBy":"133"},{"ruleId":"134","severity":1,"message":"135","line":42,"column":6,"nodeType":"136","endLine":42,"endColumn":12,"suggestions":"137"},{"ruleId":"123","severity":1,"message":"138","line":81,"column":20,"nodeType":"125","messageId":"126","endLine":81,"endColumn":29},{"ruleId":"134","severity":1,"message":"139","line":82,"column":6,"nodeType":"136","endLine":82,"endColumn":8,"suggestions":"140"},{"ruleId":"123","severity":1,"message":"138","line":87,"column":20,"nodeType":"125","messageId":"126","endLine":87,"endColumn":29},{"ruleId":"123","severity":1,"message":"138","line":98,"column":22,"nodeType":"125","messageId":"126","endLine":98,"endColumn":31},{"ruleId":"134","severity":1,"message":"141","line":99,"column":8,"nodeType":"136","endLine":99,"endColumn":29,"suggestions":"142"},"no-native-reassign",["143"],"no-negated-in-lhs",["144"],["143"],["144"],["143"],["144"],["143"],["144"],"no-unused-vars","'MenuItem' is defined but never used.","Identifier","unusedVar","'Menu' is defined but never used.",["143"],["144"],["143"],["144"],["143"],["144"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["145"],"'isMounted' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'checkoutToken.id'. Either include it or remove the dependency array.",["146"],"React Hook useEffect has missing dependencies: 'checkoutToken.id' and 'shippingCountry'. Either include them or remove the dependency array.",["147"],"no-global-assign","no-unsafe-negation",{"desc":"148","fix":"149"},{"desc":"150","fix":"151"},{"desc":"152","fix":"153"},"Update the dependencies array to be: [cart, history]",{"range":"154","text":"155"},"Update the dependencies array to be: [checkoutToken.id]",{"range":"156","text":"157"},"Update the dependencies array to be: [checkoutToken.id, shippingCountry, shippingSubdivision]",{"range":"158","text":"159"},[1196,1202],"[cart, history]",[2383,2385],"[checkoutToken.id]",[2811,2832],"[checkoutToken.id, shippingCountry, shippingSubdivision]"]